## UID
UIDs are used to uniquely represent Grobber objects. The new iteration
supports both Anime and Manga objects by using a media type prefix.

In theory you could get the media title from the uid, by reversing the encoding
scheme which is as following:

1. Convert the entire title to lowercase and remove all spaces
2. Find all non-alphanumeric characters (a-z and 0-9) and replace
   them according to the following scheme:
    1. Get the integer Unicode codepoint for this character
    2. Wrap the hexadecimal representation of said integer with underscores

Of course you would have a bit of a problem reversing the first step, but hey,
at least it's something, right?

### Format

EBNF:

```
media type = "a" | "m"
escaped character = "_" hexadecimal character { hexadecimal character } "_"
media id = { lowercase letter | digit | escaped character }
media source = { lowercase letter }
language = "en" | "de"

uid = media type "-" media id "-" media source "-" language [ "_dub" ]
```

or simplified:

`media_type-media_id-source-language(_dub)?`

And here's a regular expression to parse an UID if you ever come across one.
RegExp:

```
^(a|m)-([a-z0-9_]*)-([a-z]*)-([a-z]+?)(_dub)?$
```

### Version 1 (Deprecated)
The previous version of UID had the following format:

```
media id = { lowercase letter | digit | "_" }
media source = { lowercase letter }
language = "en" | "de"

uid = media source "-" media id "-" language [ "_dub" ]
```

There still might be one or two of these old versions floating around.
Grobber will accept them as well.